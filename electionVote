pragma solidity ^0.8.2;

contract Election {
    // Model a Candidate
    struct Candidate {
        uint id;
        string name;
        uint voteCount;
    }

    // Store accounts that have voted
    mapping(address => bool) public voters;
    // Store Candidates
    // Fetch Candidate
    mapping(uint => Candidate) public candidates;
    // Store Candidates Count
    uint public candidatesCount;

    // voted event
    event votedEvent (
        uint indexed _candidateId
    );

    function Election () public {
        xxx
    }

    function addCandidate (string _name) private {
xx
    }

    function vote (uint _candidateId) public {
        // require that they haven't voted before
xxx

        // require a valid candidate
xxx

        // record that voter has voted
        xxx

        // update candidate vote Count
xxx

        // trigger voted event
        votedEvent(_candidateId);
    }
}